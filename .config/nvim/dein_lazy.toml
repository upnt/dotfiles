[[plugins]]
repo = 'aklt/plantuml-syntax'
on_ft = ['plantuml']
hook_source = '''
let g:plantuml_executable_script='plantuml.sh'
'''

[[plugins]]
repo = 'previm/previm'
on_ft = ['markdown']

[[plugins]]
repo = 'godlygeek/tabular'
on_ft = ['markdown']

[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['markdown']

[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_i = 1
depands = ['neosnippet.vim', 'deoplete-vim-lsp']
hook_source = '''
call my_neosnippet#settings()
let g:deoplete#enable_at_startup = 1
" For conceal markers.
if has('conceal')
  set conceallevel=2 concealcursor=niv
endif
'''

[[plugins]]
repo = 'lighttiger2505/deoplete-vim-lsp'
on_i = 1

[[plugins]]
repo = 'Shougo/neosnippet.vim'
on_i = 1
depends = ['neosnippet-snippets', 'vim-lsp-neosnippet']

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
on_i = 1

[[plugins]]
repo = 'thomasfaingnaert/vim-lsp-snippets'
on_i = 1

[[plugins]]
repo = 'thomasfaingnaert/vim-lsp-neosnippet'
on_i = 1

[[plugins]]
repo = 'lervag/vimtex'
on_ft = ['tex', 'plaintex']

[[plugins]]
repo = 'octol/vim-cpp-enhanced-highlight'
on_ft = ['c', 'cpp']
hook_source = '''
let g:cpp_experimental_template_highlight = 1
let g:cpp_concepts_hilight = 1
let g:cpp_class_scope_highlight = 1
let g:cpp_member_variable_highlight = 1
let g:cpp_class_decl_highlight = 1
'''

# [[plugins]]
# repo = 'jackguo380/vim-lsp-cxx-highlight'
# on_ft = ['c', 'cpp', 'objc', 'objcpp']

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

[[plugins]]
repo = 'Shougo/neco-vim'
on_i = 1

[[plugins]]
repo = 'vim-jp/vimdoc-ja'
on_cmd = 'help'
hook_add = '''
set helplang=ja,en
'''

[[plugins]]
repo = 'sudar/vim-arduino-syntax'
on_ft = ['arduino']

[[plugins]]
repo = 'stevearc/vim-arduino'
on_ft = ['arduino']

[[plugins]]
repo = 'thinca/vim-quickrun'
on_ft = ['python', 'c', 'cpp', 'objc', 'objcpp']
hook_source = '''
let g:quickrun_config = {
\   "c": {
\       "exec": "clang %"
\   },
\   "cpp": {
\       "exec": "clang++ %"
\   }
\ }
'''

