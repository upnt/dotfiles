@article{100000spin,
  title = {100,000-Spin Coherent {{Ising}} Machine},
  author = {Toshimori, Honjo and Tomohiro, Sonobe and Kensuke, Inaba and Takahiro, Inagaki and Takuya, Ikuta and Yasuhiro, Yamada and Takushi, Kazama and Koji, Enbutsu and Takeshi, Umeki and Ryoichi, Kasahara and {Ken-ichi}, Kawarabayashi and Hiroki, Takesue},
  year = {2021},
  month = sep,
  journal = {Science Advances},
  url = {https://www.science.org/doi/10.1126/sciadv.abh0952},
  urldate = {2023-09-08},
  file = {G:\マイドライブ\マイドライブ\Zotero\量子アニーラ\100,000-spin coherent Ising machine_2021.pdf}
}

@techreport{Advantage,
  type = {Technical Report},
  title = {Advantage Processor Overview},
  author = {McGeoch, Catherine and Farr{\'e}, Pau},
  year = {2022},
  month = jan,
  institution = {D-Wave Systems},
  url = {https://www.dwavesys.com/resources/white-paper/the-d-wave-advantage-system-an-overview/},
  urldate = {2024-09-20},
  langid = {american}
}

@techreport{Andriyash16,
  type = {Technical Report},
  title = {Boosting Integer Factoring Performance via Quantum Annealing Offsets},
  author = {Andriyash, Evgeny and Bian, Zhengbing and Chudak, Fabian and {Drew-Brook}, Marshall and King, Andrew D and Macready, William G and Roy, Aidan},
  year = {2016},
  institution = {D-Wave Systems},
  url = {https://www.dwavesys.com/resources/white-paper/boosting-integer-factoring-performance-via-quantum-annealing-offsets/},
  file = {C:\Users\upnt-\Zotero\storage\8ACU8I5F\Andriyash et al. - Boosting integer factoring performance via quantum annealing oﬀsets.pdf}
}

@techreport{Bian10,
  type = {Technical Report},
  title = {The {{Ising}} Model : Teaching an Old Problem New Tricks},
  author = {Bian, Zhengbing and Chudak, Fabian and Macready, William G and Rose, Geordie},
  year = {2010},
  institution = {D-Wave Systems},
  url = {https://api.semanticscholar.org/CorpusID:15182277}
}

@article{Bian20,
  title = {Solving {{SAT}} (and {{MaxSAT}}) with a Quantum Annealer: {{Foundations}}, Encodings, and Preliminary Results},
  author = {Bian, Zhengbing and Chudak, Fabian and Macready, William and Roy, Aidan and Sebastiani, Roberto and Varotti, Stefano},
  year = {2020},
  journal = {Information and Computation},
  volume = {275},
  pages = {104609},
  issn = {0890-5401},
  doi = {10.1016/j.ic.2020.104609},
  url = {https://www.sciencedirect.com/science/article/pii/S0890540120300973},
  abstract = {Quantum annealers (QAs) are specialized quantum computers that minimize objective functions over discrete variables by physically exploiting quantum effects. Current QA platforms allow for the optimization of quadratic objectives defined over binary variables (qubits), also known as Ising problems. In the last decade, QA systems as implemented by D-Wave have scaled with Moore-like growth. Current architectures provide 2048 sparsely-connected qubits, and continued exponential growth is anticipated, together with increased connectivity. We explore the feasibility of such architectures for solving SAT and MaxSAT problems as QA systems scale. We develop techniques for effectively encoding SAT --and, with some limitations, MaxSAT-- into Ising problems compatible with sparse QA architectures. We provide the theoretical foundations for this mapping, and present encoding techniques that combine offline Satisfiability and Optimization Modulo Theories with on-the-fly placement and routing. Preliminary empirical tests on a current generation 2048-qubit D-Wave system support the feasibility of the approach for certain SAT and MaxSAT problems.}
}

@article{Brent81,
  title = {The Area-Time Complexity of Binary Multiplication},
  author = {Brent, R. P. and Kung, H. T.},
  year = {1981},
  month = jul,
  journal = {J. ACM},
  volume = {28},
  number = {3},
  pages = {521--534},
  issn = {0004-5411},
  doi = {10.1145/322261.322269},
  url = {https://dl.acm.org/doi/10.1145/322261.322269},
  urldate = {2024-09-20},
  file = {C:\Users\upnt-\Zotero\storage\S3YZLG4Z\Brent と Kung - 1981 - The Area-Time Complexity of Binary Multiplication.pdf}
}

@article{Bybee23,
  title = {Efficient Optimization with Higher-Order {{Ising}} Machines},
  author = {Bybee, Connor and Kleyko, Denis and Nikonov, Dmitri E. and Khosrowshahi, Amir and Olshausen, Bruno A. and Sommer, Friedrich T.},
  year = {2023},
  month = sep,
  journal = {Nature Communications},
  volume = {14},
  number = {1},
  pages = {6033},
  issn = {2041-1723},
  doi = {10.1038/s41467-023-41214-9},
  url = {https://doi.org/10.1038/s41467-023-41214-9},
  abstract = {A prominent approach to solving combinatorial optimization problems on parallel hardware is Ising machines, i.e., hardware implementations of networks of interacting binary spin variables. Most Ising machines leverage second-order interactions although important classes of optimization problems, such as satisfiability problems, map more seamlessly to Ising networks with higher-order interactions. Here, we demonstrate that higher-order Ising machines can solve satisfiability problems more resource-efficiently in terms of the number of spin variables and their connections when compared to traditional second-order Ising machines. Further, our results show on a benchmark dataset of Boolean k-satisfiability problems that higher-order Ising machines implemented with coupled oscillators rapidly find solutions that are better than second-order Ising machines, thus, improving the current state-of-the-art for Ising machines.}
}

@misc{Cai14,
  title = {A Practical Heuristic for Finding Graph Minors},
  author = {Cai, Jun and Macready, William G. and Roy, Aidan},
  year = {2014},
  month = jun,
  number = {arXiv:1406.2741},
  eprint = {1406.2741},
  primaryclass = {quant-ph},
  publisher = {arXiv},
  doi = {10.48550/arXiv.1406.2741},
  url = {http://arxiv.org/abs/1406.2741},
  urldate = {2023-09-08},
  abstract = {We present a heuristic algorithm for finding a graph \$H\$ as a minor of a graph \$G\$ that is practical for sparse \$G\$ and \$H\$ with hundreds of vertices. We also explain the practical importance of finding graph minors in mapping quadratic pseudo-boolean optimization problems onto an adiabatic quantum annealer.},
  archiveprefix = {arXiv},
  file = {G:\マイドライブ\マイドライブ\Zotero\論文ゼミ\A practical heuristic for finding graph minors_2014.pdf}
}

@article{Chang19,
  title = {Least-Squares Solutions to Polynomial Systems of Equations with Quantum Annealing},
  author = {Chang, Tyler H. and Lux, Thomas C. H. and Tipirneni, Sai Sindhura},
  year = {2019},
  month = nov,
  journal = {Quantum Information Processing},
  volume = {18},
  number = {12},
  pages = {374},
  issn = {1573-1332},
  doi = {10.1007/s11128-019-2489-x},
  url = {https://doi.org/10.1007/s11128-019-2489-x},
  abstract = {This work proposes and analyzes a methodology for finding least-squares solutions to the systems of polynomial equations. Systems of polynomial equations are ubiquitous in computational science, with major applications in machine learning and computer security (i.e., model fitting and integer factorization). The proposed methodology maps the squared-error function for a polynomial equation onto the Ising--Hamiltonian model, ensuring that the approximate solutions (by least squares) to real-world problems can be computed on a quantum annealer even when the exact solutions do not exist. Hamiltonians for integer factorization and polynomial systems of equations are implemented and analyzed for both logical optimality and physical practicality on modern quantum annealing hardware.}
}

@misc{dimod-BQM,
  title = {Dimod - {{D-Wave Ocean Software Documentation}}},
  author = {{D-Wave Systems}},
  year = {2024},
  month = sep,
  url = {https://docs.ocean.dwavesys.com/en/stable/docs_dimod/reference/index.html},
  urldate = {2024-09-20}
}

@article{Ding24,
  title = {Effective Prime Factorization via Quantum Annealing by Modular Locally-Structured Embedding},
  author = {Ding, Jingwen and Spallitta, Giuseppe and Sebastiani, Roberto},
  year = {2024},
  month = feb,
  journal = {Scientific Reports},
  volume = {14},
  number = {1},
  pages = {3518},
  issn = {2045-2322},
  doi = {10.1038/s41598-024-53708-7},
  url = {https://doi.org/10.1038/s41598-024-53708-7},
  abstract = {This paper investigates novel techniques to solve prime factorization by quantum annealing (QA). First, we present a very-compact modular encoding of a multiplier circuit into the architecture of current D-Wave QA devices. The key contribution is a compact encoding of a controlled full-adder into an 8-qubit module in the Pegasus topology, which we synthesized using Optimization Modulo Theories. This allows us to encode up to a 21 {\texttimes} 12-bit multiplier (and a 22 {\texttimes} 8-bit one) into the Pegasus 5760-qubit topology of current annealers. To the best of our knowledge, these are the largest factorization problems ever encoded into a quantum annealer. Second, we investigated the problem of actually solving encoded PF problems by running an extensive experimental evaluation on a D-Wave Advantage 4.1 quantum annealer. In the experiments we introduced different approaches to initialize the multiplier qubits and adopted several performance enhancement techniques. Overall, 8,219,999 = 32,749 {\texttimes} 251 was the highest prime product we were able to factorize within the limits of our QPU resources. To the best of our knowledge, this is the largest number which was ever factorized by means of a quantum annealer; also, this is the largest number which was ever factorized by means of any quantum device without relying on external search or preprocessing procedures run on classical computers.}
}

@techreport{DWaveAdvantage19,
  type = {Technical Report},
  title = {Next-Generation Topology of {{D-Wave}} Quantum Processors},
  author = {Boothby, Kelly and Bunyk, Paul and Raymond, Jack and Roy, Aidan},
  year = {2019},
  month = feb,
  institution = {D-Wave Systems},
  url = {https://arxiv.org/abs/2003.00133v1},
  urldate = {2024-09-19},
  abstract = {This paper presents an overview of the topology of D-Wave's next-generation quantum processors. It provides examples of minor embeddings and discusses performance of embedding algorithms for the new topology compared to the existing Chimera topology. It also presents some initial performance results for simple, standard Ising model classes of problems.},
  langid = {english},
  file = {G:\マイドライブ\マイドライブ\Zotero\Next-Generation Topology of D-Wave Quantum Processors_2020.pdf}
}

@misc{Fixstars,
  title = {The {{Quantum Computing Cloud}} - {{Fixstars Amplify}}},
  journal = {The Quantum Computing Cloud - Fixstars Amplify},
  url = {https://amplify.fixstars.com/en},
  urldate = {2024-07-30},
  abstract = {Compatible with all available quantum annealing/Ising solvers, mathematical optimization solvers, and gate-based quantum computers},
  langid = {english}
}

@article{fullyConnected,
  title = {A {{Fully-Connected Ising Model Embedding Method}} and {{Its Evaluation}} for {{CMOS Annealing Machines}}},
  author = {Oku, Daisuke and Terada, Kotaro and Hayashi, Masato and Yamaoka, Masanao and Tanaka, Shu and Togawa, Nozomu},
  year = {2019},
  journal = {IEICE Transactions on Information and Systems},
  volume = {E102.D},
  number = {9},
  pages = {1696--1706},
  doi = {10.1587/transinf.2018EDP7411},
  abstract = {Combinatorial optimization problems with a large solution space are difficult to solve just using von Neumann computers. Ising machines or annealing machines have been developed to tackle these problems as a promising Non-von Neumann computer. In order to use these annealing machines, every combinatorial optimization problem is mapped onto the physical Ising model, which consists of spins, interactions between them, and their external magnetic fields. Then the annealing machines operate so as to search the ground state of the physical Ising model, which corresponds to the optimal solution of the original combinatorial optimization problem. A combinatorial optimization problem can be firstly described by an ideal fully-connected Ising model but it is very hard to embed it onto the physical Ising model topology of a particular annealing machine, which causes one of the largest issues in annealing machines. In this paper, we propose a fully-connected Ising model embedding method targeting for CMOS annealing machine. The key idea is that the proposed method replicates every logical spin in a fully-connected Ising model and embeds each logical spin onto the physical spins with the same chain length. Experimental results through an actual combinatorial problem show that the proposed method obtains spin embeddings superior to the conventional de facto standard method, in terms of the embedding time and the probability of obtaining a feasible solution.},
  file = {G:\マイドライブ\マイドライブ\Zotero\量子アニーラ\A Fully-Connected Ising Model Embedding Method and Its Evaluation for CMOS_2019.pdf}
}

@article{Goto19,
  title = {Combinatorial Optimization by Simulating Adiabatic Bifurcations in Nonlinear {{Hamiltonian}} Systems},
  author = {Goto, Hayato and Tatsumura, Kosuke and Dixon, Alexander R.},
  year = {2019},
  journal = {Science Advances},
  volume = {5},
  number = {4},
  eprint = {https://www.science.org/doi/pdf/10.1126/sciadv.aav2372},
  pages = {eaav2372},
  doi = {10.1126/sciadv.aav2372},
  url = {https://www.science.org/doi/abs/10.1126/sciadv.aav2372},
  abstract = {Nonlinear Hamiltonian systems search optimal solutions exploiting their adiabatic and chaotic evolutions. Combinatorial optimization problems are ubiquitous but difficult to solve. Hardware devices for these problems have recently been developed by various approaches, including quantum computers. Inspired by recently proposed quantum adiabatic optimization using a nonlinear oscillator network, we propose a new optimization algorithm simulating adiabatic evolutions of classical nonlinear Hamiltonian systems exhibiting bifurcation phenomena, which we call simulated bifurcation (SB). SB is based on adiabatic and chaotic (ergodic) evolutions of nonlinear Hamiltonian systems. SB is also suitable for parallel computing because of its simultaneous updating. Implementing SB with a field-programmable gate array, we demonstrate that the SB machine can obtain good approximate solutions of an all-to-all connected 2000-node MAX-CUT problem in 0.5 ms, which is about 10 times faster than a state-of-the-art laser-based machine called a coherent Ising machine. SB will accelerate large-scale combinatorial optimization harnessing digital computer technologies and also offer a new application of computational and mathematical physics.}
}

@article{Goto21,
  title = {High-Performance Combinatorial Optimization Based on Classical Mechanics},
  author = {Goto, Hayato and Endo, Kotaro and Suzuki, Masaru and Sakai, Yoshisato and Kanao, Taro and Hamakawa, Yohei and Hidaka, Ryo and Yamasaki, Masaya and Tatsumura, Kosuke},
  year = {2021},
  month = feb,
  journal = {Science Advances},
  volume = {7},
  number = {6},
  pages = {eabe7953},
  publisher = {American Association for the Advancement of Science},
  doi = {10.1126/sciadv.abe7953},
  url = {https://www.science.org/doi/10.1126/sciadv.abe7953},
  urldate = {2023-09-08},
  abstract = {Quickly obtaining optimal solutions of combinatorial optimization problems has tremendous value but is extremely difficult. Thus, various kinds of machines specially designed for combinatorial optimization have recently been proposed and developed. Toward the realization of higher-performance machines, here, we propose an algorithm based on classical mechanics, which is obtained by modifying a previously proposed algorithm called simulated bifurcation. Our proposed algorithm allows us to achieve not only high speed by parallel computing but also high solution accuracy for problems with up to one million binary variables. Benchmarking shows that our machine based on the algorithm achieves high performance compared to recently developed machines, including a quantum annealer using a superconducting circuit, a coherent Ising machine using a laser, and digital processors based on various algorithms. Thus, high-performance combinatorial optimization is realized by massively parallel implementations of the proposed algorithm based on classical mechanics.},
  file = {G:\マイドライブ\マイドライブ\Zotero\論文ゼミ\High-performance combinatorial optimization based on classical mechanics_2021.pdf}
}

@misc{Gurobi,
  title = {Gurobi Optimizer},
  year = {2024},
  month = jul,
  journal = {Gurobi ptimization},
  url = {https://www.gurobi.com/},
  urldate = {2024-09-20},
  abstract = {Decision Intelligence -- Across the Enterprise Data Scientists Operations Researchers Business Leaders Academics Consultants and ISVs Optimization for Data Scientists Data Scientists By combining machine learning and optimization, you can go beyond predictions---to optimized decisions. Learn More Optimization for Operations Researchers Operations Researchers When your ``good enough'' solver isn't enough, Gurobi delivers the speed, quality, [{\dots}]},
  langid = {american}
}

@article{Jiang18,
  title = {Quantum Annealing for Prime Factorization},
  author = {Jiang, Shuxian and Britt, Keith A. and McCaskey, Alexander J. and Humble, Travis S. and Kais, Sabre},
  year = {2018},
  month = dec,
  journal = {Scientific Reports},
  volume = {8},
  number = {1},
  pages = {17667},
  issn = {2045-2322},
  doi = {10.1038/s41598-018-36058-z},
  url = {https://doi.org/10.1038/s41598-018-36058-z},
  abstract = {We have developed a framework to convert an arbitrary integer factorization problem to an executable Ising model by first writing it as an optimization function then transforming the k-bit coupling (k {$\geq$} 3) terms to quadratic terms using ancillary variables. Our resource-efficient method uses \$\$\{{\textbackslash}mathscr\{O\}\}(\{{\textbackslash}mathrm\{log\}\}{\textasciicircum}\{2\}(N))\$\$binary variables (qubits) for finding the factors of an integer N. We present how to factorize 15, 143, 59989, and 376289 using 4, 12, 59, and 94 logical qubits, respectively. This method was tested using the D-Wave 2000Q for finding an embedding and determining the prime factors for a given composite number. The method is general and could be used to factor larger integers as the number of available qubits increases, or combined with other ad hoc methods to achieve better performances for specific numbers.}
}

@article{Jun23,
  title = {{{HUBO}} and {{QUBO}} Models for Prime Factorization},
  author = {Jun, Kyungtaek and Lee, Hyunju},
  year = {2023},
  month = jun,
  journal = {Scientific Reports},
  volume = {13},
  number = {1},
  pages = {10080},
  issn = {2045-2322},
  doi = {10.1038/s41598-023-36813-x},
  url = {https://doi.org/10.1038/s41598-023-36813-x},
  abstract = {The security of the RSA cryptosystem is based on the difficulty of factoring a large number N into prime numbers \$\$p\$\$and \$\$q\$\$satisfying \$\$N=p{\textbackslash}times q\$\$. This paper presents a prime factorization method using a D-Wave quantum computer that could threaten the RSA cryptosystem in the future. The starting point for this method is very simple, representing two prime numbers as qubits. Then, we set the difference between the product of the two prime numbers expressed in qubits and N as a cost function, and we find the solution when the cost function is minimized. D-Wave's quantum annealer can find the minimum value of any quadratic problem. However, the cost function must be a higher-order unconstrained optimization (HUBO) model because it contains second- or higher-order terms. We used a hybrid solver accessible via Leap, D-Wave's real-time quantum cloud service, and the dimod package provided by the D-Wave Ocean software development kit (SDK) to solve the HUBO problem. We also successfully factorized 102,454,763 with 26 logical qubits. In addition, we factorized 1,000,070,001,221 using the range-dependent Hamiltonian algorithm.}
}

@article{Kadowaki98,
  title = {Quantum Annealing in the Transverse {{Ising}} Model},
  author = {Kadowaki, Tadashi and Nishimori, Hidetoshi},
  year = {1998},
  month = nov,
  journal = {Physical Review E},
  volume = {58},
  number = {5},
  pages = {5355--5363},
  publisher = {American Physical Society (APS)},
  issn = {1095-3787},
  doi = {10.1103/physreve.58.5355},
  url = {http://dx.doi.org/10.1103/PhysRevE.58.5355}
}

@article{Kagawa21,
  title = {High-Throughput {{FPGA}} Implementation for Quadratic Unconstrained Binary Optimization},
  author = {Kagawa, Hiroshi and Ito, Yasuaki and Nakano, Koji and Yasudo, Ryota and Kawamata, Yuya and Katsuki, Ryota and Tabata, Yusuke and Yazane, Takashi and Hamano, Kenichiro},
  year = {2023},
  journal = {Concurrency and Computation: Practice and Experience},
  volume = {35},
  number = {14},
  eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/cpe.6565},
  pages = {e6565},
  doi = {10.1002/cpe.6565},
  url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/cpe.6565},
  abstract = {Abstract Quadratic unconstrained binary optimization (QUBO) is a combinatorial optimization problem. Since various NP-hard problems such as the traveling salesman problem can be formulated as a QUBO instance, QUBO is used with a wide range of applications. The main contribution of this article is to propose high-throughput FPGA implementations for the QUBO solver. We perform the local search using different bit-selection strategies based on the simulated annealing in the proposed implementation. The hardware is a pipeline structure with no pipeline hazards using multiple instances, where the bit-flip operation is always performed every clock cycle. We implemented the proposed circuit on Xilinx UltraScale+ FPGA VU9P. The implementation result shows that the circuit can search solutions per second. Besides, by sharing the block RAM that stores a weight matrix, we implemented a dual annealer architecture that has two QUBO solvers into the FPGA. As a result, the dual annealer architecture can search solutions per second.},
  keywords = {block RAMs,FPGA,QUBO,simulated annealing}
}

@article{Lanthaler23,
  title = {Scalable Set of Reversible Parity Gates for Integer Factorization},
  author = {Lanthaler, Martin and Niehoff, Benjamin E. and Lechner, Wolfgang},
  year = {2023},
  month = apr,
  journal = {Communications Physics},
  volume = {6},
  number = {1},
  pages = {73},
  issn = {2399-3650},
  doi = {10.1038/s42005-023-01191-3},
  url = {https://doi.org/10.1038/s42005-023-01191-3},
  abstract = {Classical microprocessors operate on irreversible gates, that, when combined with AND, half-adder and full-adder operations, execute complex tasks such as multiplication of integers. We introduce parity versions of all components of a multiplication circuit. The parity gates are reversible quantum gates based on the recently introduced parity transformation and build on ground-space encoding of the corresponding gate logic. Using a quantum optimization heuristic, e.g., an adiabatic quantum computing protocol, allows one to quantum mechanically reverse the process of multiplication and thus factor integers, which has applications in cryptography. Our parity approach builds on nearest-neighbor constraints equipped with local fields, able to encode the logic of a binary multiplication circuit in a modular and scalable way.}
}

@article{Levin03,
  title = {The Tale of One-Way Functions},
  author = {Levin, L. A.},
  year = {2003},
  month = jan,
  journal = {Problems of Information Transmission},
  volume = {39},
  number = {1},
  pages = {92--103},
  issn = {1608-3253},
  doi = {10.1023/A:1023634616182},
  url = {https://doi.org/10.1023/A:1023634616182},
  abstract = {The existence of one-way functions (owf) is arguably the most important problem in computer theory. The article discusses and refines a number of concepts relevant to this problem. For instance, it gives the first combinatorial complete owf, i.e., a function which is one-way if any function is. There are surprisingly many subtleties in basic definitions. Some of these subtleties are discussed or hinted at in the literature and some are overlooked. Here, a~unified approach is attempted.}
}

@article{Lucas14,
  title = {Ising Formulations of Many {{NP}} Problems},
  author = {Lucas, Andrew},
  year = {2014},
  month = feb,
  journal = {Frontiers in Physics},
  volume = {2},
  publisher = {Frontiers},
  issn = {2296-424X},
  doi = {10.3389/fphy.2014.00005},
  url = {https://www.frontiersin.org/articles/10.3389/fphy.2014.00005},
  urldate = {2024-05-29},
  abstract = {We provide Ising formulations for many NP-complete and NP-hard problems, including all of Karp's 21 NP-complete problems. This collects and extends mappings to the Ising model from partitioning, covering and satisfiability. In each case, the required number of spins is at most cubic in the size of the problem. This work may be useful in designing adiabatic quantum optimization algorithms.},
  langid = {english},
  file = {G:\マイドライブ\マイドライブ\Zotero\量子アニーラ\Ising formulations of many NP problems_2014.pdf}
}

@inproceedings{Matsubara17,
  title = {Ising-Model Optimizer with Parallel-Trial Bit-Sieve Engine},
  booktitle = {Complex, Intelligent, and Software Intensive Systems},
  author = {Matsubara, Satoshi and Tamura, Hirotaka and Takatsu, Motomu and Yoo, Danny and Vatankhahghadim, Behraz and Yamasaki, Hironobu and Miyazawa, Toshiyuki and Tsukamoto, Sanroku and Watanabe, Yasuhiro and Takemoto, Kazuya and Sheikholeslami, Ali},
  editor = {Barolli, Leonard and Terzo, Olivier},
  year = {2018},
  pages = {432--438},
  publisher = {Springer International Publishing},
  address = {Cham},
  abstract = {We propose a hardware architecture for solving combinatorial optimization problems and implemented it on an FPGA. The hardware minimizes the energy of Ising model with 1,024 state variables fully connectable through 16-bit weights, which ease restrictions on mapping problems onto the Ising model. The system uses a hardware bit-sieve engine that performs a Markov-chain Monte-Carlo search with a parallel-evaluation of the energy increment prior to the bit selection, achieving a speedup while guaranteeing convergence. The engine is implemented on an Arria 10 GX FPGA and solves 32-city traveling salesman problems 104 times faster than simulated annealing running on a 3.5-GHz Intel Xeon E5-1620v3 processor.},
  isbn = {978-3-319-61566-0}
}

@article{McGeoch19,
  title = {Practical Annealing-Based Quantum Computing},
  author = {McGeoch, Catherine C. and Harris, Richard and Reinhardt, Steven P. and Bunyk, Paul I.},
  year = {2019},
  month = jun,
  journal = {IEEE Computer},
  volume = {52},
  number = {6},
  pages = {38--46},
  issn = {0018-9162, 1558-0814},
  doi = {10.1109/MC.2019.2908836},
  url = {https://ieeexplore.ieee.org/document/8728085/},
  urldate = {2024-06-11},
  copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
  langid = {english},
  file = {G:\マイドライブ\Zotero\論文ゼミ\Practical Annealing-Based Quantum Computing_2019.pdf}
}

@book{Mead89,
  title = {Analog {{VLSI}} and Neural Systems},
  author = {Mead, Carver},
  year = {1989},
  publisher = {Addison-Wesley Longman Publishing Co., Inc.},
  address = {USA},
  isbn = {0-201-05992-4}
}

@article{Murty87,
  title = {Some {{NP-complete}} Problems in Quadratic and Nonlinear Programming},
  author = {Murty, Katta G. and Kabadi, Santosh N.},
  year = {1987},
  month = jun,
  journal = {Mathematical Programming},
  volume = {39},
  number = {2},
  pages = {117--129},
  issn = {1436-4646},
  doi = {10.1007/BF02592948},
  url = {https://doi.org/10.1007/BF02592948},
  urldate = {2024-09-20},
  abstract = {In continuous variable, smooth, nonconvex nonlinear programming, we analyze the complexity of checking whether(a)a given feasible solution is not a local minimum, and(b)the objective function is not bounded below on the set of feasible solutions.},
  langid = {english},
  file = {C:\Users\upnt-\Zotero\storage\YNV7SELG\Murty と Kabadi - 1987 - Some NP-complete problems in quadratic and nonlinear programming.pdf}
}

@inproceedings{Nakano23,
  title = {Diverse Adaptive Bulksearch: A Framework for Solving {{QUBO}} Problems on Multiple {{GPUs}}},
  shorttitle = {Diverse {{Adaptive Bulk Search}}},
  booktitle = {2023 {{IEEE International Parallel}} and {{Distributed Processing Symposium Workshops}} ({{IPDPSW}})},
  author = {Nakano, Koji and Takafuji, Daisuke and Ito, Yasuaki and Yazane, Takashi and Yano, Junko and Ozaki, Shiro and Katsuki, Ryota and Mori, Rie},
  year = {2023},
  month = may,
  eprint = {2207.03069},
  primaryclass = {cs},
  pages = {314--325},
  doi = {10.1109/IPDPSW59300.2023.00060},
  url = {http://arxiv.org/abs/2207.03069},
  urldate = {2023-11-21},
  abstract = {Quadratic Unconstrained Binary Optimization (QUBO) is a combinatorial optimization to find an optimal binary solution vector that minimizes the energy value defined by a quadratic formula of binary variables in the vector. As many NP-hard problems can be reduced to QUBO problems, considerable research has gone into developing QUBO solvers running on various computing platforms such as quantum devices, ASICs, FPGAs, GPUs, and optical fibers. This paper presents a framework called Diverse Adaptive Bulk Search (DABS), which has the potential to find optimal solutions of many types of QUBO problems. Our DABS solver employs a genetic algorithm-based search algorithm featuring three diverse strategies: multiple search algorithms, multiple genetic operations, and multiple solution pools. During the execution of the solver, search algorithms and genetic operations that succeeded in finding good solutions are automatically selected to obtain better solutions. Moreover, search algorithms traverse between different solution pools to find good solutions. We have implemented our DABS solver to run on multiple GPUs. Experimental evaluations using eight NVIDIA A100 GPUs confirm that our DABS solver succeeds in finding optimal or potentially optimal solutions for three types of QUBO problems.},
  archiveprefix = {arXiv},
  file = {G:\マイドライブ\マイドライブ\Zotero\量子アニーラ\Diverse Adaptive Bulk Search_2023.pdf}
}

@article{Nakano23-dual,
  title = {Dual-Matrix Domain-Wall: {{A}} Novel Technique for Generating Permutations by {{QUBO}} and {{Ising}} Models with Quadratic Sizes},
  shorttitle = {Dual-{{Matrix Domain-Wall}}},
  author = {Nakano, Koji and Tsukiyama, Shunsuke and Ito, Yasuaki and Yazane, Takashi and Yano, Junko and Kato, Takumi and Ozaki, Shiro and Mori, Rie and Katsuki, Ryota},
  year = {2023},
  month = oct,
  journal = {Technologies},
  volume = {11},
  number = {5},
  eprint = {2308.01024},
  primaryclass = {quant-ph},
  pages = {143},
  issn = {2227-7080},
  doi = {10.3390/technologies11050143},
  url = {http://arxiv.org/abs/2308.01024},
  urldate = {2024-09-19},
  abstract = {The Ising model is defined by an objective function using a quadratic formula of qubit variables. The problem of an Ising model aims to determine the qubit values of the variables that minimize the objective function, and many optimization problems can be reduced to this problem. In this paper, we focus on optimization problems related to permutations, where the goal is to find the optimal permutation out of the \$n!\$ possible permutations of \$n\$ elements. To represent these problems as Ising models, a commonly employed approach is to use a kernel that utilizes one-hot encoding to find any one of the \$n!\$ permutations as the optimal solution. However, this kernel contains a large number of quadratic terms and high absolute coefficient values. The main contribution of this paper is the introduction of a novel permutation encoding technique called dual-matrix domain-wall, which significantly reduces the number of quadratic terms and the maximum absolute coefficient values in the kernel. Surprisingly, our dual-matrix domain-wall encoding reduces the quadratic term count and maximum absolute coefficient values from \$n{\textasciicircum}3-n{\textasciicircum}2\$ and \$2n-4\$ to \$6n{\textasciicircum}2-12n+4\$ and \$2\$, respectively. We also demonstrate the applicability of our encoding technique to partial permutations and Quadratic Unconstrained Binary Optimization (QUBO) models. Furthermore, we discuss a family of permutation problems that can be efficiently implemented using Ising/QUBO models with our dual-matrix domain-wall encoding.},
  archiveprefix = {arXiv},
  file = {G:\マイドライブ\マイドライブ\Zotero\algorithm\Dual-Matrix Domain-Wall_2023.pdf}
}

@article{Okuyama19,
  title = {Binary Optimization by Momentum Annealing},
  author = {Okuyama, Takuya and Sonobe, Tomohiro and Kawarabayashi, Ken-ichi and Yamaoka, Masanao},
  year = {2019},
  month = jul,
  journal = {Physical Review E},
  volume = {100},
  number = {1},
  pages = {012111},
  issn = {2470-0045, 2470-0053},
  doi = {10.1103/PhysRevE.100.012111},
  url = {https://link.aps.org/doi/10.1103/PhysRevE.100.012111},
  urldate = {2023-09-08},
  langid = {english},
  file = {G:\マイドライブ\マイドライブ\Zotero\量子アニーラ\Binary optimization by momentum annealing_2019.pdf}
}

@misc{OpenJij,
  title = {{{OpenJij}}},
  journal = {OpenJij},
  url = {https://www.openjij.org},
  urldate = {2024-07-30},
  abstract = {OpenJij is a heuristic optimization library for the Ising model and QUBO. OpenJij can be easily written in Python. Let's try to install OpenJij.},
  langid = {english}
}

@article{Pakhomchik22,
  title = {Converting of {{Boolean}} Expression to Linear Equations, Inequalities and {{QUBO}} Penalties for Cryptanalysis},
  author = {Pakhomchik, Aleksey I. and Voloshinov, Vladimir V. and Vinokur, Valerii M. and Lesovik, Gordey B.},
  year = {2022},
  month = feb,
  journal = {Algorithms},
  volume = {15},
  number = {2},
  pages = {33},
  publisher = {Multidisciplinary Digital Publishing Institute},
  issn = {1999-4893},
  doi = {10.3390/a15020033},
  url = {https://www.mdpi.com/1999-4893/15/2/33},
  urldate = {2024-07-01},
  abstract = {There exists a wide range of constraint programming (CP) problems defined on Boolean functions depending on binary variables. One of the approaches to solving CP problems is using specific appropriate solvers, e.g., SAT solvers. An alternative is using the generic solvers for mixed-integer linear programming problems (MILP), but they require transforming expressions with Boolean functions to linear equations or inequalities. Here, we present two methods of such a transformation which applies to any Boolean function defined by explicit rules giving values of the Boolean function for all combinations of its Boolean variables. The first method represents the Boolean function as a linear equation in the original binary variables and, possibly, binary ancillaries, which become additional variables of the MILP problem being composed. The second method represents the Boolean function as a set of linear inequalities in the original binary variables and one additional continuous variable (representing the value of the function). The choice between the first or second method is a trade-off between the number of binary variables and number of linear constraints in the emerging MP problem. The advantage of the proposed approach is that both methods reduce important cryptanalysis problems, such as the preimaging of hash functions or breaking symmetric ciphers as the MILP problems, which are solved by the generic MILP solvers. Furthermore, the first method enables to reduce the binary linear equations to quadratic unconstrained binary optimization (QUBO), by the quantum annealer, e.g., D-Wave.},
  copyright = {http://creativecommons.org/licenses/by/3.0/},
  langid = {english},
  file = {G:\マイドライブ\Zotero\出版物\Converting of Boolean Expression to Linear Equations, Inequalities and QUBO_2022.pdf}
}

@inproceedings{preimageMD,
  title = {Preimage {{Attacks}} on {{One-Block MD4}}, 63-{{Step MD5}} and {{More}}},
  booktitle = {Selected {{Areas}} in {{Cryptography}}},
  author = {Aoki, Kazumaro and Sasaki, Yu},
  editor = {Avanzi, Roberto Maria and Keliher, Liam and Sica, Francesco},
  year = {2009},
  pages = {103--119},
  publisher = {Springer},
  address = {Berlin, Heidelberg},
  doi = {10.1007/978-3-642-04159-4_7},
  abstract = {This paper shows preimage attacks on one-block MD4 and MD5 reduced to 63 (out of 64) steps. Our attacks are based on the meet-in-the-middle attack, and many additional improvements make the preimage computable faster than that of the brute-force attack, 2128 hash computation. A preimage of one-block MD4 can be computed in the complexity of the 2107 MD4 compression function computation, and a preimage of MD5 reduced to 63 steps can be computed in the complexity of the 2121 MD5 compression function computation. Moreover, we optimize the computational order of the brute-force attack against MD5, and a preimage of full-round MD5 can be computed in the complexity of the 2127 MD5 compression function computation.},
  isbn = {978-3-642-04159-4},
  langid = {english},
  file = {G:\マイドライブ\マイドライブ\Zotero\ハッシュアルゴリズム\Preimage Attacks on One-Block MD4, 63-Step MD5 and More_2009.pdf}
}

@inproceedings{preimages,
  title = {Preimages for {{Reduced SHA-0}} and {{SHA-1}}},
  booktitle = {Advances in {{Cryptology}} -- {{CRYPTO}} 2008},
  author = {De Canni{\`e}re, Christophe and Rechberger, Christian},
  editor = {Wagner, David},
  year = {2008},
  pages = {179--202},
  publisher = {Springer},
  address = {Berlin, Heidelberg},
  doi = {10.1007/978-3-540-85174-5_11},
  abstract = {In this paper, we examine the resistance of the popular hash function SHA-1 and its predecessor SHA-0 against dedicated preimage attacks. In order to assess the security margin of these hash functions against these attacks, two new cryptanalytic techniques are developed: Reversing the inversion problem: the idea is to start with an impossible expanded message that would lead to the required digest, and then to correct this message until it becomes valid without destroying the preimage property.P3graphs: an algorithm based on the theory of random graphs that allows the conversion of preimage attacks on the compression function to attacks on the hash function with less effort than traditional meet-in-the-middle approaches.},
  isbn = {978-3-540-85174-5},
  langid = {english},
  file = {G:\マイドライブ\マイドライブ\Zotero\ハッシュアルゴリズム\Preimages for Reduced SHA-0 and SHA-1_2008.pdf}
}

@article{RSA,
  title = {A Method for Obtaining Digital Signatures and Public-Key Cryptosystems},
  author = {Rivest, R. L. and Shamir, A. and Adleman, L.},
  year = {1978},
  month = feb,
  journal = {Commun. ACM},
  volume = {21},
  number = {2},
  pages = {120--126},
  issn = {0001-0782},
  doi = {10.1145/359340.359342},
  url = {https://dl.acm.org/doi/10.1145/359340.359342},
  urldate = {2024-09-20},
  abstract = {An encryption method is presented with the novel property that publicly revealing an encryption key does not thereby reveal the corresponding decryption key. This has two important consequences: (1) Couriers or other secure means are not needed to transmit keys, since a message can be enciphered using an encryption key publicly revealed by the intented recipient. Only he can decipher the message, since only he knows the corresponding decryption key. (2) A message can be ``signed'' using a privately held decryption key. Anyone can verify this signature using the corresponding publicly revealed encryption key. Signatures cannot be forged, and a signer cannot later deny the validity of his signature. This has obvious applications in ``electronic mail'' and ``electronic funds transfer'' systems. A message is encrypted by representing it as a number M, raising M to a publicly specified power e, and then taking the remainder when the result is divided by the publicly specified product, n, of two large secret primer numbers p and q. Decryption is similar; only a different, secret, power d is used, where e * d {$\equiv$} 1(mod (p - 1) * (q - 1)). The security of the system rests in part on the difficulty of factoring the published divisor, n.},
  file = {C:\Users\upnt-\Zotero\storage\NDXS9TY7\Rivest et al. - 1978 - A method for obtaining digital signatures and public-key cryptosystems.pdf}
}

@misc{shs,
  title = {Secure {{Hash Standard}} ({{SHS}})},
  author = {{National Institute of Standards {and} Technology}},
  year = {2015},
  month = aug,
  number = {Federal Information Processing Standard (FIPS) 180-4},
  publisher = {U.S. Department of Commerce},
  doi = {10.6028/NIST.FIPS.180-4},
  url = {https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf},
  urldate = {2024-05-29},
  abstract = {This standard specifies hash algorithms that can be used to generate digests of messages. The digests are used to detect whether messages have been changed since the digests were generated.},
  langid = {english},
  file = {G:\マイドライブ\マイドライブ\Zotero\ハッシュアルゴリズム\Secure Hash Standard (SHS)_2015.pdf}
}

@inproceedings{Su16,
  title = {A Quantum Annealing Approach for {{Boolean}} Satisfiability Problem},
  booktitle = {2016 53nd {{ACM}}/{{EDAC}}/{{IEEE}} Design Automation Conference ({{DAC}})},
  author = {Su, Juexiao and Tu, Tianheng and He, Lei},
  year = {2016},
  pages = {1--6},
  doi = {10.1145/2897937.2897973},
  keywords = {Annealing,Boolean functions,Computer architecture,Computers,Optimization,Quantum computing,Quantum mechanics}
}

@inproceedings{Tao20,
  title = {A Work-Time Optimal Parallel Exhaustive Search Algorithm for the {{QUBO}} and the Ising Model, with {{GPU}} Implementation},
  booktitle = {2020 {{IEEE}} International Parallel and Distributed Processing Symposium Workshops ({{IPDPSW}})},
  author = {Tao, Masaki and Nakano, Koji and Ito, Yasuaki and Yasudo, Ryota and Tatekawa, Masaru and Katsuki, Ryota and Yazane, Takashi and Inaba, Yoko},
  year = {2020},
  pages = {557--566},
  doi = {10.1109/IPDPSW50202.2020.00098},
  keywords = {Combinatorial optimization,Computational modeling,GPGPU,Graphics processing units,Ising model,Mathematical model,Parallel algorithms,Quantum computing,QUBO,Simulated annealing}
}

@misc{tutorial,
  title = {A {{Tutorial}} on {{Formulating}} and {{Using QUBO Models}}},
  author = {Glover, Fred and Kochenberger, Gary and Du, Yu},
  year = {2019},
  month = nov,
  number = {arXiv:1811.11538},
  eprint = {1811.11538},
  primaryclass = {quant-ph},
  publisher = {arXiv},
  doi = {10.48550/arXiv.1811.11538},
  url = {http://arxiv.org/abs/1811.11538},
  urldate = {2024-08-09},
  abstract = {The Quadratic Unconstrained Binary Optimization (QUBO) model has gained prominence in recent years with the discovery that it unifies a rich variety of combinatorial optimization problems. By its association with the Ising problem in physics, the QUBO model has emerged as an underpinning of the quantum computing area known as quantum annealing and has become a subject of study in neuromorphic computing. Through these connections, QUBO models lie at the heart of experimentation carried out with quantum computers developed by D-Wave Systems and neuromorphic computers developed by IBM. Computational experience is being amassed by both the classical and the quantum computing communities that highlights not only the potential of the QUBO model but also its effectiveness as an alternative to traditional modeling and solution methodologies. This tutorial discloses the basic features of the QUBO model that give it the power and flexibility to encompass the range of applications that have thrust it onto center stage of the optimization field. We show how many different types of constraining relationships arising in practice can be embodied within the "unconstrained" QUBO formulation in a very natural manner using penalty functions, yielding exact model representations in contrast to the approximate representations produced by customary uses of penalty functions. Each step of generating such models is illustrated in detail by simple numerical examples, to highlight the convenience of using QUBO models in numerous settings. We also describe recent innovations for solving QUBO models that offer a fertile avenue for integrating classical and quantum computing and for applying these models in machine learning.},
  archiveprefix = {arXiv},
  file = {C:\Users\upnt-\Zotero\storage\Y4ME3ZBZ\A Tutorial on Formulating and Using QUBO Models_2019.pdf}
}

@book{Ullman84,
  title = {Computational Aspects of {{VLSI}}},
  author = {Ullma, Jeffrey D},
  year = {1984},
  publisher = {W. H. Freeman \& Co.},
  address = {USA},
  isbn = {0-7167-8145-X}
}

@article{Wang20,
  title = {Prime Factorization Algorithm Based on Parameter Optimization of {{Ising}} Model},
  author = {Wang, Baonan and Hu, Feng and Yao, Haonan and Wang, Chao},
  year = {2020},
  month = apr,
  journal = {Scientific Reports},
  volume = {10},
  number = {1},
  pages = {7106},
  issn = {2045-2322},
  doi = {10.1038/s41598-020-62802-5},
  url = {https://doi.org/10.1038/s41598-020-62802-5},
  abstract = {This paper provides a new (second) way, which is completely different from Shor's algorithm, to show the optimistic potential of a D-Wave quantum computer for deciphering RSA and successfully factoring all integers within 10000. Our method significantly reduced the local field coefficient \$\$h\$\$ and coupling term coefficient \$\$J\$\$ by more than 33\% and 26\%, respectively, of those of Ising model, which can further improve the stability of qubit chains and improve the upper bound of integer factorization. In addition, our results obtained the best index (20-bit integer (1028171)) of quantum computing for deciphering RSA via the quantum computing software environment provided by D-Wave. Furthermore, Shor's algorithm requires approximately 40 qubits to factor the integer 1028171, which is far beyond the capacity of universal quantum computers. Thus, post quantum cryptography should further consider the potential of the D-Wave quantum computer for deciphering the RSA cryptosystem in future.}
}

@article{Wang22,
  title = {Research on Quantum Annealing Integer Factorization Based on Different Columns},
  author = {Wang, Baonan and Yang, Xiaoting and Zhang, Dan},
  year = {2022},
  journal = {Frontiers in Physics},
  volume = {10},
  issn = {2296-424X},
  doi = {10.3389/fphy.2022.914578},
  url = {https://www.frontiersin.org/journals/physics/articles/10.3389/fphy.2022.914578},
  abstract = {{\textexclamdown}p{\textquestiondown}The majority of scholars believe that Shor's algorithm is a unique and powerful quantum algorithm for RSA cryptanalysis, so current postquantum cryptography research has largely considered only the potential threats of Shor's algorithm. This paper verifies the feasibility of deciphering RSA public key cryptography based on D-Wave, which is the second most effective RSA attack method after Shor's algorithm. This paper proposes the influence of different column methods on the final integer factorization, puts forward a new dimension reduction formula, simplifies the integer factorization model based on quantum annealing, simulates it with the qbsolv quantum computing software environment provided by D-Wave, and factors the integer 1630729 (an 11-bit prime factor multiplied by an 11-bit prime factor). The research results show that choosing an appropriate number of columns and column width in the binary integer factorization multiplication table is very important for studying the optimization ability of the quantum annealing algorithm. In fact, Science, Nature, IEEE Spectrum, and the National Academies of Sciences (NAS) are consistent in asserting that the practical application of general-purpose quantum computers is far in the future. Therefore, although D-Wave computers were initially mainly purchased by Lockheed Martin, Google, etc., for purposes such as image processing, machine learning, combinatorial optimization, and software verification, post quantum cryptography research should further consider the potential of the D-Wave quantum computer in deciphering RSA cryptosystems in the future, and a discussion of this potential is one of the contributions of this paper.{\textexclamdown}/p{\textquestiondown}}
}

@article{Yasudo-JPDC22,
  title = {{{GPU-accelerated}} Scalable Solver with Bit Permutated Cyclic-Min Algorithm for Quadratic Unconstrained Binary Optimization},
  author = {Yasudo, Ryota and Nakano, Koji and Ito, Yasuaki and Katsuki, Ryota and Tabata, Yusuke and Yazane, Takashi and Hamano, Kenichiro},
  year = {2022},
  journal = {Journal of Parallel and Distributed Computing},
  volume = {167},
  pages = {109--122},
  issn = {0743-7315},
  doi = {10.1016/j.jpdc.2022.04.016},
  url = {https://www.sciencedirect.com/science/article/pii/S0743731522000946},
  abstract = {A wide range of combinatorial optimization problems can be reduced to the Ising model, and equivalently the quadratic unconstrained binary optimization (QUBO) problem. Thus, in recent years, researchers have proposed to solve QUBO on FPGAs, GPUs, and special-purpose processors. The adaptive bulk search (ABS) is a previously-proposed framework for solving QUBO in parallel on multiple GPUs. In the ABS, a CPU host performs a GA-based global search while GPUs asynchronously perform many local searches in parallel. An original ABS adopts a simple local search algorithm called a cyclic-min algorithm, which does not use pseudo random numbers. However, the lack of randomness may cause a potential drawback of restricted bit-flipping operations in a local search. To avoid this drawback, this paper proposes a cyclic-min algorithm with randomly-generated multiple bit permutations, which enables a more effective local search with random number generation in CPUs (not in GPUs). Furthermore, this paper introduces a scalable implementation of the ABS with MPI and OpenMP. Our experimental results on TSUBAME3.0 show that the solution quality improves and the throughput linearly increases as the number of GPUs increases; with 256 GPUs, it evaluates 20.1{\texttimes}1012 solutions per second.}
}

@article{Zaborniak21,
  title = {Benchmarking {{Hamiltonian}} Noise in the {{D-Wave}} Quantum Annealer},
  author = {Zaborniak, Tristan and {de Sousa}, Rog{\'e}rio},
  year = {2021},
  journal = {IEEE Transactions on Quantum Engineering},
  volume = {2},
  pages = {1--6},
  publisher = {{Institute of Electrical and Electronics Engineers (IEEE)}},
  issn = {2689-1808},
  doi = {10.1109/tqe.2021.3050449},
  url = {http://dx.doi.org/10.1109/TQE.2021.3050449}
}
