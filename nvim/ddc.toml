[[plugins]]
repo = 'Shougo/pum.vim'

[[plugins]]
repo = 'Shougo/ddc.vim'
depends = ['denops.vim', 'pum.vim']
on_event = ['InsertEnter', 'CursorHold']
hook_source = '''
call ddc#custom#patch_global('sources', ['around'])
call ddc#custom#patch_global('cmdlineSources', ['around'])

call ddc#custom#patch_global('sourceOptions', {
    \ '_': {
    \     'matchers': ['matcher_head'],
    \     'sorters': ['sorter_rank']
    \ },
    \ })

call ddc#custom#patch_global('sourceOptions', {
    \ 'around': {'mark': 'A'},
    \ })
call ddc#custom#patch_global('sourceParams', {
    \ 'around': {'maxSize': 500},
    \ })
call ddc#custom#patch_filetype('markdown', 'sourceParams', {
    \ 'around': {'maxSize': 100},
    \ })

call ddc#custom#patch_global('autoCompleteEvents', [
    \ 'InsertEnter', 'TextChangeI', 'TextChangedP',
    \ 'CmdlineEnter', 'CmdlineChanged',
    \ ])
call ddc#custom#patch_global('completionMenu', 'pum.vim')

" Mappings
inoremap <silent><expr> <TAB>
    \ pum#visible() ? '<Cmd>call pum#map#insert_relative(+1)<CR>' :
    \ (col('.') <= 1 <Bar><Bar> getline('.')[col('.') - 2] =~# '\s') ?
    \ '<TAB>' : ddc#map#manual_complete()
inoremap <S-Tab> <Cmd>call pum#map#insert_relative(-1)<CR>
inoremap <C-n>   <Cmd>call pum#map#insert_relative(+1)<CR>
inoremap <C-p>   <Cmd>call pum#map#insert_relative(-1)<CR>
inoremap <C-y>   <Cmd>call pum#map#confirm()<CR>
inoremap <C-e>   <Cmd>call pum#map#cancel()<CR>
inoremap <silent><expr> <C-l> ddc#map#extend()

cnoremap <silent><expr> <TAB>
    \ pum#visible() ? '<Cmd>call pum#map#insert_relative(+1)<CR>' :
    \ exists('b:ddc_cmdline_completion') ? ddc#map#manual_complete() : "\<Tab>"
cnoremap <S-Tab> <Cmd>call pum#map#insert_relative(-1)<CR>
cnoremap <C-c>   <Cmd>call pum#map#confirm()<CR>
cnoremap <C-o>   <Cmd>call pum#map#cancel()<CR>

call ddc#enable()
'''
hook_add = '''
nnoremap : <Cmd>call CommandlinePre(':')<CR>:
nnoremap ? <Cmd>call CommandlinePre('/')<CR>?
function! CommandlinePre(mode) abort
    set wildchar=<C-t>
    cnoremap <expr><buffer> <Tab>
    \ pum#visible() ? '<Cmd>call pum#map#insert_relative(+1)<CR>' :
    \ exists('b:ddc_cmdline_completion') ? ddc#manual_complete() : "\<C-t>"
    " Overwrite sources
    if !exists('b:prev_buffer_config')
        let b:prev_buffer_config = ddc#custom#get_buffer()
    endif
    autocmd MyAutoCmd User DDCCmdlineLeave ++once call CommandlinePost()
    autocmd MyAutoCmd InsertEnter <buffer> ++once call CommandlinePost()
    call ddc#enable_cmdline_completion()
  endfunction
  function! CommandlinePost() abort
    silent! cunmap <buffer> <Tab>
    if exists('b:prev_buffer_config')
      call ddc#custom#set_buffer(b:prev_buffer_config)
      unlet b:prev_buffer_config
    else
      call ddc#custom#set_buffer({})
    endif
    set wildchar=<Tab>
  endfunction
'''

[[plugins]]
repo = 'Shougo/ddc-around'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-matcher_head'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'
on_source = 'ddc.vim'
